#!/usr/bin/env python
# Script by Jason Kwong
# jkwong1@student.unimelb.edu.au

from __future__ import print_function

import argparse
from argparse import RawTextHelpFormatter
import re
import os
import sys
import shutil

# Functions
def msg(*args, **kwargs):
	print(*args, file=sys.stderr, **kwargs)

def err(*args, **kwargs):
	msg(*args, **kwargs)
	sys.exit(1);

# Usage
parser = argparse.ArgumentParser(
	formatter_class=RawTextHelpFormatter,
	description='Alters Nullarbor makefile to run shovill\n'
		'1. Generate the Nullarbor makefile using "nullarbor.pl"\n'
		'2. Run this script as specified above\n'
		'3. Run the makefile eg. "nice make -j 8 -C /home/user/nullarbor" or enter the nullarbor output directory and type "make"\n',
	usage='\n  %(prog)s DIRECTORY')
parser.add_argument('nulldir', metavar='DIRECTORY', nargs=1, help='Nullarbor output directory containing Makefile (required)')
parser.add_argument('--assdir', metavar='DIRECTORY', default='/mnt/seq/MDU/QC/', help='directory containing previous assemblies (default="/mnt/seq/MDU/QC/")')
args = parser.parse_args()

# Specify paths
mkfileOLD = os.path.join(args.nulldir[0], 'Makefile.original')
mkfileNEW = os.path.join(args.nulldir[0], 'Makefile')
#QCpath = '/mnt/seq/MDU/QC/'
QCpath = args.assdir
fasta = '/contigs.fa'

# Check Nullarbor makefile exists
if os.path.isfile(mkfileNEW) == False:
	err('ERROR: Unable to locate Makefile in specified directory.')
with open(mkfileNEW, 'rb') as f:
	if not re.search('This file was automatically generated by the Nullarbor software', f.readline()):
		err('ERROR: Please generate a Makefile using "nullarbor.pl".')

# Backup makefile
shutil.copyfile(mkfileNEW, mkfileOLD)

# Modify makefile
with open(mkfileOLD, 'rb') as f:
	lines = f.readlines()
	n = len(lines)
	l = 0
	while l < n:
		line = lines[l]
		# Modify if spades specified with --accurate
		if re.match(r'\tspades.py', line):
			s = line.split()
			id = s[10][:-7]
			# Check if spades assembly exists in MDU QC folder
			qc = str(QCpath + id + fasta)
			if os.path.isfile(qc) == True:
				lines[l] = '\tcp {} {}/contigs.fa\n'.format(qc, id)
#				lines[l+2] = '\tmv {}/shovill/00-shovill.log {}/shovill.log\n'.format(id, id)
#				lines[l+3] = '\trm -f -v -r {}/shovill\n'.format(id)
#				lines[l+4] = '\n'
				del lines[l+1:l+4]
				n = n-3
			# Else run shovill
			else:
				lines[l] = '\tshovill --outdir {}/shovill --R1 {}/R1.fq.gz --R2 {}/R2.fq.gz --cpus $(CPUS)\n'.format(id, id, id)
				lines[l+1] = '\tmv {}/shovill/contigs.fa $@\n'.format(id)
		# Modify if megahit specified
		if re.match(r'\tmegahit', line):
			s = line.split()
			id = s[14][:-8]
			# Check if spades assembly exists in MDU QC folder
			qc = str(QCpath + id + fasta)
			if os.path.isfile(qc) == True:
				lines[l] = '\tcp {} {}/contigs.fa\n'.format(qc, id)
				del lines[l+1:l+5]
				n = n-4
			# Else run shovill
			else:
				lines[l] = '\tshovill --outdir {}/shovill --R1 {}/R1.fq.gz --R2 {}/R2.fq.gz --cpus $(CPUS)\n'.format(id, id, id)
				lines[l+1] = '\tmv {}/shovill/contigs.fa $@\n'.format(id)
				lines[l+2] = '\tmv {}/shovill/00-shovill.log {}/shovill.log\n'.format(id, id)
				lines[l+3] = '\trm -f -v -r {}/shovill\n'.format(id)
				lines[l+4] = '\n'
		l = l+1

# Write new makefile
with open(mkfileNEW, 'wb') as w:
	w.write(''.join(lines))

print('WARNING: Makefile modified: Nullarbor will now use shovill for assembly.')
